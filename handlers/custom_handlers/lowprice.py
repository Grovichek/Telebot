from telebot.types import Message
from loader import bot
from states.search_states import SearchStates
from states.menu_states import MenuStates
from api_hotels import get_locations, get_photos
from keyboards.inline.yes_no import yes_no_keyboard
from api_hotels import get_list
from keyboards.inline.dynamic_city_keyboard import dynamic_city_keyboard
from keyboards.inline.dynamic_hotels_keyboard import dynamic_hotels_keyboard
import re


# –ö–æ–º–∞–Ω–¥–∞ /lowprice
# –ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è:
# 1. –ì–æ—Ä–æ–¥, –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –ø–æ–∏—Å–∫.
# 2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ (–Ω–µ –±–æ–ª—å—à–µ –∑–∞—Ä–∞–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞).
# 3. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –≤—ã–≤–æ–¥–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–µ–ª—è (‚Äú–î–∞/–ù–µ—Ç‚Äù)
#   a. –ü—Ä–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–∞–∫–∂–µ –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–Ω–µ –±–æ–ª—å—à–µ –∑–∞—Ä–∞–Ω–µ–µ
#   –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞)


@bot.callback_query_handler(func=lambda call: call.data == 'lowprice')
def lowprice(message: Message) -> None:
    bot.answer_callback_query(message.id, "üëå")
    bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ, –≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –º–Ω–µ –ø–æ–∏—Å–∫–∞—Ç—å –¥–µ—à—ë–≤—ã–µ –æ—Ç–µ–ª–∏?')
    bot.set_state(message.from_user.id, SearchStates.city)


@bot.message_handler(state=SearchStates.city)
def get_city(message: Message) -> None:
    if len(message.text) < 30:
        bot.send_message(message.from_user.id, "–ú–Ω–µ –Ω—É–∂–Ω–æ –º–∞–ª–µ–Ω—å–∫–æ –ø–æ–¥—É–º–∞—Ç—å, –ø–æ–¥–æ–∂–¥–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞")
        r = get_locations(message.text)
        if r:
            bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞',
                             reply_markup=dynamic_city_keyboard(r, 'city'))
        else:
            bot.send_message(message.from_user.id,
                             '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑–æ–∫, –º–æ–∂–µ—Ç –±—É–∫–≤—ã –ø–µ—Ä–µ–ø—É—Ç–∞–ª?')
    else:
        bot.send_message(message.from_user.id, '–î–ª–∏–Ω–Ω–æ–≤–∞—Ç–æ, –¥–∞–≤–∞–π –ø–æ –∫–æ—Ä–æ—á–µ')


@bot.callback_query_handler(func=lambda call: call.data.startswith('city'))
def get_region_id(message: Message) -> None:
    with bot.retrieve_data(message.from_user.id) as data:
        data['region_id'] = message.data.lstrip('city-')
    bot.send_message(message.from_user.id, '–û—Ç–ª–∏—á–Ω–æ! –°–∫–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ç–µ–ª–µ–π?')
    bot.set_state(message.from_user.id, SearchStates.count_results)


@bot.message_handler(state=SearchStates.count_results)
def get_count_results(message: Message) -> None:
    if message.text.isdigit():
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            if int(message.text) <= 10:
                data['count_results'] = int(message.text)
            else:
                bot.send_message(message.from_user.id, '–ù–µ–µ, —Å—Ç–æ–ª—å–∫–æ –Ω–µ —Å–º–æ–≥—É, –ø–æ–∫–∞–∂—É –¥–µ—Å—è—Ç—å')
                data['count_results'] = 10
        bot.send_message(message.from_user.id, '–ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ç–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ—Ç–µ–ª–µ–π?',
                         reply_markup=yes_no_keyboard('show'))
        # TODO –≠—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–±—ç–∫, –Ω—É–∂–Ω–æ –ª–∏ –¥–ª—è —Ö–µ–Ω–¥–ª–µ—Ä–∞ –∫–æ—Ç–æ—Ä—ã–π –µ–≥–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∏—Å–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ?
        #  —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–º –Ω–µ –Ω—É–∂–Ω–æ, –Ω–æ –±–µ–∑ –Ω–µ–≥–æ –±–æ—Ç –æ—Å—Ç–∞—ë—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏ –µ—Å–ª–∏ –Ω–∞–ø—Ä–∏–º–µ—Ä
        #  –≤–º–µ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫ –ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –≤ —á–∞—Ç –±—É–¥–µ—Ç –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä
        #  –∫–∞–∫ –≥—Ä–∞–º–æ—Ç–Ω–æ —Ä–µ—à–∏—Ç—å —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É? —è —Ä–µ—à–∏–ª —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ MenuStates.home
        #  –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫ –Ω–µ–º—É –∫–æ–≥–¥–∞ –æ–Ω–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –Ω–æ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è —ç—Ç–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        #  -------------
        #  –µ—â–µ –≤–æ–ø—Ä–æ—Å –ø–æ –ø–æ–≤–æ–¥—É –∫–æ–ª–±—ç–∫ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤, —è –ø—ã—Ç–∞–ª—Å—è —Å–¥–µ–ª–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã –µ–µ –º–æ–∂–Ω–æ –±—ã–ª–æ
        #  –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –ø—Ä–∏–¥—É–º–∞–ª –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ –Ω–µ–µ –ø—Ä–µ—Ñ–∏–∫—Å, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞?
    else:
        bot.send_message(message.from_user.id, '–¶–∏—Ñ—Ä–∞–º–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')


@bot.callback_query_handler(func=lambda call: call.data == 'show-yes')
def yes(message: Message) -> None:
    bot.set_state(message.from_user.id, SearchStates.count_photos)
    bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ, —Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ–∫–∞–∑–∞—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–µ–ª—è?')


@bot.callback_query_handler(func=lambda call: call.data == 'show-no')
def no(message: Message) -> None:
    bot.set_state(message.from_user.id, SearchStates.show_results)
    show_results(message, False)


@bot.message_handler(state=SearchStates.count_photos)
def get_count_photos(message: Message) -> None:
    if message.text.isdigit():
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            if int(message.text) <= 5:
                data['count_photos'] = int(message.text)
            else:
                bot.send_message(message.from_user.id, '–ú–Ω–æ–≥–æ–≤–∞—Ç–æ, –ø–æ–∫–∞–∂—É –ø–æ –ø—è—Ç—å —Ñ–æ—Ç–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ')
                data['count_photos'] = 5

        bot.set_state(message.from_user.id, SearchStates.show_results)
        show_results(message, True)

    else:
        bot.send_message(message.from_user.id, '–¶–∏—Ñ—Ä–∞–º–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')

# TODO –í—Å—ë —á—Ç–æ –Ω–∏–∂–µ, –µ—â–µ –Ω–µ –ø—Ä–∏–¥—É–º–∞–Ω–æ.
#  –ü—Ä–æ—Å—å–±–∞ –¥–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–æ–¥—É –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ, —è —É–∂–µ –Ω–∞—á–∞–ª —Ç–æ–Ω—É—Ç—å –≤ —Ç–æ–º —á—Ç–æ —Å–∞–º –∂–µ –Ω–∞–ø–∏—Å–∞–ª, –∫–∞–∫ –±—ã —è –Ω–µ —Å—Ç–∞—Ä–∞–ª—Å—è
#  –≤—Å—ë –¥–µ–ª–∞—Ç—å –∞–∫–∫—É—Ä–∞—Ç–Ω–æ, —á–µ–º –±–æ–ª—å—à–µ –∫–æ–¥–∞, —Ç–µ–º –±–æ–ª—å—à–µ –±–∞—Ä–¥–∞–∫–∞, –º–Ω–µ –≤—Å—ë –≤—Ä–µ–º—è —Ö–æ—á–µ—Ç—Å—è –≤—Å—ë —É–¥–∞–ª–∏—Ç—å –∏ –Ω–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞,
#  –Ω—É–∂–Ω–æ –ª–∏ –ø–∏—Å–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –∫ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º? –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞ –æ–ø–∏—Å–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π?
def show_results(message: Message, photo: bool) -> None:
    bot.send_message(message.from_user.id, '–ü–æ–≥–æ–¥–∏ —á—É—Ç–æ–∫')
    with bot.retrieve_data(message.from_user.id) as data:
        r = get_list(region_id=data['region_id'],
                     adults=2,
                     results_size=data['count_results'],
                     sort='PRICE_LOW_TO_HIGH')
    if photo:
        bot.send_message(message.from_user.id, '—Ç—É—Ç —Å–∫–æ—Ä–æ –±—É–¥—É—Ç —Ñ–æ—Ç–∫–∏ —Ç–∏–ø–∞ —ç—Ç–æ–π')
        photo = "https://images.trvl-media.com/lodging/10000000/9210000/9209700/9209612/4d162553.jpg?impolicy=resizecrop&rw=670&ra=fit"

        bot.send_photo(message.from_user.id, photo, caption='–ø–æ–¥–ø–∏—Å—å')
    else:
        bot.send_message(message.from_user.id, '—Ç—É—Ç —á—Ç–æ-—Ç–æ –±—É–¥–µ—Ç, –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∫–Ω–æ–ø–∫–∏',
                         reply_markup=dynamic_hotels_keyboard(r))
