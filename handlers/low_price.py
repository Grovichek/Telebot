from telebot.types import Message, CallbackQuery
from telegram_bot_calendar import WYearTelegramCalendar

from loader import bot
from states.my_states import MainStates
from keyboards.inline.dynamic_city_keyboard import dynamic_keyboard
from api_services.hotels.get_locations import get_cities_by_query
from datetime import date
from exceptions import ApiException

MAX_NUM_OF_RESULTS = 10
MAX_NUM_OF_PHOTOS = 10
SORT = 'PRICE_LOW_TO_HIGH'


# –ö–æ–º–∞–Ω–¥–∞ /lowprice
# –ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è:
# 1. –ì–æ—Ä–æ–¥, –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –ø–æ–∏—Å–∫.
# 2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ (–Ω–µ –±–æ–ª—å—à–µ –∑–∞—Ä–∞–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞).
# 3. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –≤—ã–≤–æ–¥–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–µ–ª—è (‚Äú–î–∞/–ù–µ—Ç‚Äù)
#   a. –ü—Ä–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–∞–∫–∂–µ –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–Ω–µ –±–æ–ª—å—à–µ –∑–∞—Ä–∞–Ω–µ–µ
#   –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞)


@bot.callback_query_handler(func=lambda call: call.data == 'start_low_price')
def start_low_price(call: CallbackQuery) -> None:
    """–ó–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è low_price"""
    # bot.answer_callback_query(call.id, 'üëå')
    # global my_chat_id
    # global my_message_id
    # my_chat_id = call.message.chat.id
    # my_message_id = call.message.message_id
    print(call.message.message_id)
    bot.send_message(call.message.chat.id, '–•–æ—Ä–æ—à–æ, –≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –º–Ω–µ –ø–æ–∏—Å–∫–∞—Ç—å –¥–µ—à—ë–≤—ã–µ –æ—Ç–µ–ª–∏?')
    bot.set_state(call.from_user.id, MainStates.city)


@bot.message_handler(state=MainStates.city)
def get_city(msg: Message):
    print("–≥–µ—Ç —Å–∏—Ç–∏")
    bot.send_message(msg.chat.id, '–ù—É–∂–Ω–æ –ø–æ–¥—É–º–∞—Ç—å')
    cities = get_cities_by_query(msg.text)
    bot.send_message(msg.chat.id, '–£—Ç–æ—á–Ω–∏—Ç–µ', reply_markup=dynamic_keyboard(cities=cities, prefix='get-city'))
    bot.set_state(msg.from_user.id, MainStates.check_in)


@bot.callback_query_handler(func=lambda call: call.data.startswith('get-city'))
def get_dates(call: CallbackQuery):
    with bot.retrieve_data(call.from_user.id) as data:
        data['region_id'] = call.data.lstrip('get-city')
    calendar, step = WYearTelegramCalendar(calendar_id=1, locale='ru', min_date=date.today()).build()

    bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ –∑–∞—Å–µ–ª–µ–Ω–∏—è –≤ –æ—Ç–µ–ª—å:', reply_markup=calendar)


@bot.callback_query_handler(func=WYearTelegramCalendar.func(calendar_id=1))
def cal(c: CallbackQuery):
    result, key, step = WYearTelegramCalendar(calendar_id=1, locale='ru', min_date=date.today()).process(c.data)
    if not result and key:
        bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ –∑–∞—Å–µ–ª–µ–Ω–∏—è –≤ –æ—Ç–µ–ª—å:",
                              c.message.chat.id,
                              c.message.message_id,
                              reply_markup=key)
    elif result:
        with bot.retrieve_data(c.message.chat.id) as data:
            data['check_in'] = result
            print(data['check_in'])
        calendar, step = WYearTelegramCalendar(calendar_id=2, locale='ru', min_date=date.today()).build()
        bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ –≤—ã—Å–µ–ª–µ–Ω–∏—è –∏–∑ –æ—Ç–µ–ª—è:",
                              c.message.chat.id,
                              c.message.message_id, reply_markup=calendar)


@bot.callback_query_handler(func=WYearTelegramCalendar.func(calendar_id=2))
def cal(c: CallbackQuery):
    result, key, step = WYearTelegramCalendar(calendar_id=2, locale='ru', min_date=date.today()).process(c.data)
    if not result and key:
        bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ –≤—ã—Å–µ–ª–µ–Ω–∏—è –∏–∑ –æ—Ç–µ–ª—è:",
                              c.message.chat.id,
                              c.message.message_id,
                              reply_markup=key)
    elif result:
        with bot.retrieve_data(c.message.chat.id) as data:
            data['check_out'] = result
            print(data['check_out'])
        bot.edit_message_text(f"{data['check_in']}  -  {data['check_out']}",
                              c.message.chat.id,
                              c.message.message_id)
